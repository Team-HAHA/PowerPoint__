# -*- coding: utf-8 -*-
"""Web Crawling_Cheal's.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rsy4imIoi_pM2zfcikdXl6rgJRc70blj
"""

!pip install requests

from bs4 import BeautifulSoup # 데이터 정리용 서적(라이브러리)
import requests # HTML 소스코드 (웹페이지 소스코드) 호출용 라이브러리

# requests 라는 기술을 가진 책을 컴퓨터가 읽을 수 있도록 가져와 주세요
# import = 수입하다.
# "이름들" = 라이브러리.

# 부가적인 책들
import pandas as pd
import matplotlib.pyplot as plt

# 네이버 영화 평점 사이트 연결 요청 ('Real Steel')

URL = 'https://movie.naver.com/movie/bi/mi/pointWriteFormList.naver?code=76460&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page=1'
connect = requests.get(URL)

html = connect.text

print(html)


# 필요한 데이터 가져오기!

soup = BeautifulSoup(html, 'html.parser')

sentence = soup.select('body > div > div > div > ul > li > div > p')

print(sentence)

# 원하는 문장 출력하는 함수!

def get_sentence(data): # 이런 기능을 가진 함수를 만들거에요! # 정의

  # <------- 기능 ------->
  text = str(data) # 들어온 데이터를 str=문자열 형태로 만들어 줍니다!

  start = text.find('\">') + len("\">") # 시작부분을 찾습니다!
  end = text.find("</span>") # 끝부분을 찾습니다!

  sentence = text[start:end] # 시작부분과 끝부분 사이에 있는 문장을 뽑습니다!
  
  # <-------- 결과 배출 -------> 
  return sentence # 뽑은 문장을 돌려줍니다!

print(get_sentence("[<span id=\"_filtered_ment_0\">꿀잼진짜 미친영화다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ </span>"))

# 함수??? y = 2x + 6 ---> f(x) = 2x + 6
# 함수 : 어떤 것을 넣었을때 안에서 처리가되고 결고가 배출되는 형식
# 프로그래밍을 할때? 함수를 만났을 경우 우리가 가져야하는 자세
# 함수 -> 얘는 무슨 기능을 가졌을까?

def f(x): # 넣은 애를 2배 해주는 기능
  y = 2*x
  return y

def g(x): # 넣은애를 제곱해주는 기능을 가졌구나
  y = x*x
  return y

print(f(3))
print(g(3))

# 네이버 영화 평점 사이트 연결 요청 ('Real Steel')

data_array = []

for page in range(1, 20):
  # 영화 홈페이지 연결 (requests)
  URL = 'https://movie.naver.com/movie/bi/mi/pointWriteFormList.naver?code=76460&type=after&isActualPointWriteExecute=false&isMileageSubscriptionAlready=false&isMileageSubscriptionReject=false&page='+str(page)

  connect = requests.get(URL)

  html = connect.text

  # 필요한 데이터 가져오기! (Beautiful Soup4)

  soup = BeautifulSoup(html, 'html.parser')

  sentence = soup.select('body > div > div > div > ul > li > div > p')

  # 원하는 문장 출력하는 함수!

  def get_sentence(data): # 이런 기능을 가진 함수를 만들거에요! # 정의

    # <------- 기능 ------->
    text = str(data) # 들어온 데이터를 str=문자열 형태로 만들어 줍니다!
    start = text.find('\">') + len("\">") # 시작부분을 찾습니다!
    end = text.find("</span>") # 끝부분을 찾습니다!

    sentence = text[start:end] # 시작부분과 끝부분 사이에 있는 문장을 뽑습니다!
    
    # <-------- 결과 배출 -------> 
    return sentence # 뽑은 문장을 돌려줍니다!

  # 1페이지 문장 뽑기

  for i in range(len(sentence)):
    sent = get_sentence(sentence[i]).replace('\t',"")
    sent = sent.replace('\r',"")
    sent = sent.replace('\n',"")
    if(sent != "관람객"):
      data_array.append(sent)

# 출력부
print(data_array)

cnt = 1
for i in range(len(data_array)):
  print(str(cnt) + "번째 댓글 : " + data_array[i])
  cnt+=1

print("안녕하세요 \t반갑습니다")

